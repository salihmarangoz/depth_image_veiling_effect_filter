#!/usr/bin/env python
PACKAGE = "depth_image_veiling_effect_filter"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
#gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
#gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
#gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

#size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                       gen.const("Medium",     int_t, 1, "A medium constant"),
#                       gen.const("Large",      int_t, 2, "A large constant"),
#                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                     "An enum to set size")

#gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

size_enum = gen.enum([ gen.const("getImpactAngleImageBasedOnLocalNormals",      int_t, 0, "getImpactAngleImageBasedOnLocalNormals"),
                       gen.const("custom",     int_t, 1, "custom"),
                       gen.const("shadowfilterintegralimagenormalestimator",     int_t, 2, "shadowfilter + integralimagenormalestimator")],
                     "An enum to set size")

gen.add("method", int_t, 0, "method", 2, 0, 2, edit_method=size_enum)
gen.add("threshold", double_t, 0, "Pixels with surface angles w.r.t. the camera higher than this will be removed", 0.2, 0.0, 1.5707)
gen.add("k",    int_t,    0, "k neighbor", 2,  1, 20)

exit(gen.generate(PACKAGE, "depth_image_veiling_effect_filter", "DepthImageVeilingEffectFilter"))